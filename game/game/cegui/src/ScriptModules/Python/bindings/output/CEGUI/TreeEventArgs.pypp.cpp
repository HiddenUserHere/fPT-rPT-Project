// This file has been generated by Py++.

#include "boost/python.hpp"
#include "generators/include/python_CEGUI.h"
#include "TreeEventArgs.pypp.hpp"

namespace bp = boost::python;

struct TreeEventArgs_wrapper : CEGUI::TreeEventArgs, bp::wrapper< CEGUI::TreeEventArgs > {

    TreeEventArgs_wrapper(CEGUI::TreeEventArgs const & arg )
    : CEGUI::TreeEventArgs( arg )
      , bp::wrapper< CEGUI::TreeEventArgs >(){
        // copy constructor
        
    }

    TreeEventArgs_wrapper(::CEGUI::Window * wnd )
    : CEGUI::TreeEventArgs( boost::python::ptr(wnd) )
      , bp::wrapper< CEGUI::TreeEventArgs >(){
        // constructor
    
    }

    static ::CEGUI::TreeItem * get_treeItem(CEGUI::TreeEventArgs const & inst ){
        return inst.treeItem;
    }
    
    static void set_treeItem( CEGUI::TreeEventArgs & inst, ::CEGUI::TreeItem * new_value ){ 
        inst.treeItem = new_value;
    }

};

void register_TreeEventArgs_class(){

    { //::CEGUI::TreeEventArgs
        typedef bp::class_< TreeEventArgs_wrapper, bp::bases< CEGUI::WindowEventArgs > > TreeEventArgs_exposer_t;
        TreeEventArgs_exposer_t TreeEventArgs_exposer = TreeEventArgs_exposer_t( "TreeEventArgs", "*!\n\
         \n\
            EventArgs based class that is used for objects passed to input event\n\
            handlers concerning Tree events.\n\
         *\n", bp::init< CEGUI::Window * >(( bp::arg("wnd") )) );
        bp::scope TreeEventArgs_scope( TreeEventArgs_exposer );
        bp::implicitly_convertible< CEGUI::Window *, CEGUI::TreeEventArgs >();
        TreeEventArgs_exposer.add_property( "treeItem"
                    , bp::make_function( (::CEGUI::TreeItem * (*)( ::CEGUI::TreeEventArgs const & ))(&TreeEventArgs_wrapper::get_treeItem), bp::return_internal_reference< >() )
                    , bp::make_function( (void (*)( ::CEGUI::TreeEventArgs &,::CEGUI::TreeItem * ))(&TreeEventArgs_wrapper::set_treeItem), bp::with_custodian_and_ward_postcall< 1, 2 >() ) );
    }

}
