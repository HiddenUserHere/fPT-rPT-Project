// This file has been generated by Py++.

#include "boost/python.hpp"
#include "generators/include/python_CEGUI.h"
#include "WindowRendererManager.pypp.hpp"

namespace bp = boost::python;

void register_WindowRendererManager_class(){

    { //::CEGUI::WindowRendererManager
        typedef bp::class_< CEGUI::WindowRendererManager, bp::bases< CEGUI::Singleton< CEGUI::WindowRendererManager > >, boost::noncopyable > WindowRendererManager_exposer_t;
        WindowRendererManager_exposer_t WindowRendererManager_exposer = WindowRendererManager_exposer_t( "WindowRendererManager", bp::init< >("*************************************************************************\n\
            Contructor  Destructor\n\
        *************************************************************************\n") );
        bp::scope WindowRendererManager_scope( WindowRendererManager_exposer );
        { //::CEGUI::WindowRendererManager::addFactory
        
            typedef void ( ::CEGUI::WindowRendererManager::*addFactory_function_type )( ::CEGUI::WindowRendererFactory * ) ;
            
            WindowRendererManager_exposer.def( 
                "addFactory"
                , addFactory_function_type( &::CEGUI::WindowRendererManager::addFactory )
                , ( bp::arg("wr") ) );
        
        }
        { //::CEGUI::WindowRendererManager::createWindowRenderer
        
            typedef ::CEGUI::WindowRenderer * ( ::CEGUI::WindowRendererManager::*createWindowRenderer_function_type )( ::CEGUI::String const & ) ;
            
            WindowRendererManager_exposer.def( 
                "createWindowRenderer"
                , createWindowRenderer_function_type( &::CEGUI::WindowRendererManager::createWindowRenderer )
                , ( bp::arg("name") )
                , bp::return_value_policy< bp::reference_existing_object >()
                , "*************************************************************************\n\
                Factory usage\n\
            *************************************************************************\n" );
        
        }
        { //::CEGUI::WindowRendererManager::destroyWindowRenderer
        
            typedef void ( ::CEGUI::WindowRendererManager::*destroyWindowRenderer_function_type )( ::CEGUI::WindowRenderer * ) ;
            
            WindowRendererManager_exposer.def( 
                "destroyWindowRenderer"
                , destroyWindowRenderer_function_type( &::CEGUI::WindowRendererManager::destroyWindowRenderer )
                , ( bp::arg("wr") )
                , "*************************************************************************\n\
                Factory usage\n\
            *************************************************************************\n" );
        
        }
        { //::CEGUI::WindowRendererManager::getFactory
        
            typedef ::CEGUI::WindowRendererFactory * ( ::CEGUI::WindowRendererManager::*getFactory_function_type )( ::CEGUI::String const & ) const;
            
            WindowRendererManager_exposer.def( 
                "getFactory"
                , getFactory_function_type( &::CEGUI::WindowRendererManager::getFactory )
                , ( bp::arg("name") )
                , bp::return_value_policy< bp::reference_existing_object >()
                , "*************************************************************************\n\
                Accessors\n\
            *************************************************************************\n" );
        
        }
        { //::CEGUI::WindowRendererManager::getSingleton
        
            typedef ::CEGUI::WindowRendererManager & ( *getSingleton_function_type )(  );
            
            WindowRendererManager_exposer.def( 
                "getSingleton"
                , getSingleton_function_type( &::CEGUI::WindowRendererManager::getSingleton )
                , bp::return_value_policy< bp::reference_existing_object >()
                , "*************************************************************************\n\
                Singleton\n\
            *************************************************************************\n" );
        
        }
        { //::CEGUI::WindowRendererManager::isFactoryPresent
        
            typedef bool ( ::CEGUI::WindowRendererManager::*isFactoryPresent_function_type )( ::CEGUI::String const & ) const;
            
            WindowRendererManager_exposer.def( 
                "isFactoryPresent"
                , isFactoryPresent_function_type( &::CEGUI::WindowRendererManager::isFactoryPresent )
                , ( bp::arg("name") )
                , "*************************************************************************\n\
                Accessors\n\
            *************************************************************************\n" );
        
        }
        { //::CEGUI::WindowRendererManager::removeFactory
        
            typedef void ( ::CEGUI::WindowRendererManager::*removeFactory_function_type )( ::CEGUI::String const & ) ;
            
            WindowRendererManager_exposer.def( 
                "removeFactory"
                , removeFactory_function_type( &::CEGUI::WindowRendererManager::removeFactory )
                , ( bp::arg("name") ) );
        
        }
        WindowRendererManager_exposer.staticmethod( "getSingleton" );
    }

}
