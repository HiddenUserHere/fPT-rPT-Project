// This file has been generated by Py++.

#include "boost/python.hpp"
#include "generators/include/python_CEGUI.h"
#include "FontEventArgs.pypp.hpp"

namespace bp = boost::python;

struct FontEventArgs_wrapper : CEGUI::FontEventArgs, bp::wrapper< CEGUI::FontEventArgs > {

    FontEventArgs_wrapper(CEGUI::FontEventArgs const & arg )
    : CEGUI::FontEventArgs( arg )
      , bp::wrapper< CEGUI::FontEventArgs >(){
        // copy constructor
        
    }

    FontEventArgs_wrapper(::CEGUI::Font * font )
    : CEGUI::FontEventArgs( boost::python::ptr(font) )
      , bp::wrapper< CEGUI::FontEventArgs >(){
        // constructor
    
    }

    static ::CEGUI::Font * get_font(CEGUI::FontEventArgs const & inst ){
        return inst.font;
    }
    
    static void set_font( CEGUI::FontEventArgs & inst, ::CEGUI::Font * new_value ){ 
        inst.font = new_value;
    }

};

void register_FontEventArgs_class(){

    { //::CEGUI::FontEventArgs
        typedef bp::class_< FontEventArgs_wrapper, bp::bases< CEGUI::EventArgs > > FontEventArgs_exposer_t;
        FontEventArgs_exposer_t FontEventArgs_exposer = FontEventArgs_exposer_t( "FontEventArgs", "! EventArgs based class that is used for notifications regarding Font objects.\n", bp::init< CEGUI::Font * >(( bp::arg("font") )) );
        bp::scope FontEventArgs_scope( FontEventArgs_exposer );
        bp::implicitly_convertible< CEGUI::Font *, CEGUI::FontEventArgs >();
        FontEventArgs_exposer.add_property( "font"
                    , bp::make_function( (::CEGUI::Font * (*)( ::CEGUI::FontEventArgs const & ))(&FontEventArgs_wrapper::get_font), bp::return_internal_reference< >() )
                    , bp::make_function( (void (*)( ::CEGUI::FontEventArgs &,::CEGUI::Font * ))(&FontEventArgs_wrapper::set_font), bp::with_custodian_and_ward_postcall< 1, 2 >() )
                    , "! Pointer to the font object related to the event notification.\n" );
    }

}
