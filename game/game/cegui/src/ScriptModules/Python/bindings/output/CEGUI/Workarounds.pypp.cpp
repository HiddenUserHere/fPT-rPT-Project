// This file has been generated by Py++.

#include "boost/python.hpp"
#include "generators/include/python_CEGUI.h"
#include "Workarounds.pypp.hpp"

namespace bp = boost::python;

void register_Workarounds_class(){

    { //::CEGUI::Workarounds
        typedef bp::class_< CEGUI::Workarounds > Workarounds_exposer_t;
        Workarounds_exposer_t Workarounds_exposer = Workarounds_exposer_t( "Workarounds" );
        bp::scope Workarounds_scope( Workarounds_exposer );
        { //::CEGUI::Workarounds::EventLinkDefinitionMapGet
        
            typedef ::CEGUI::EventLinkDefinition * ( *EventLinkDefinitionMapGet_function_type )( ::std::map<CEGUI::String, CEGUI::EventLinkDefinition*, CEGUI::StringFastLessCompare, std::allocator<std::pair<CEGUI::String const, CEGUI::EventLinkDefinition*> > > &,::CEGUI::String const & );
            
            Workarounds_exposer.def( 
                "EventLinkDefinitionMapGet"
                , EventLinkDefinitionMapGet_function_type( &::CEGUI::Workarounds::EventLinkDefinitionMapGet )
                , ( bp::arg("map"), bp::arg("key") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::CEGUI::Workarounds::ImagerySectionMapGet
        
            typedef ::CEGUI::ImagerySection * ( *ImagerySectionMapGet_function_type )( ::std::map<CEGUI::String, CEGUI::ImagerySection*, CEGUI::StringFastLessCompare, std::allocator<std::pair<CEGUI::String const, CEGUI::ImagerySection*> > > &,::CEGUI::String const & );
            
            Workarounds_exposer.def( 
                "ImagerySectionMapGet"
                , ImagerySectionMapGet_function_type( &::CEGUI::Workarounds::ImagerySectionMapGet )
                , ( bp::arg("map"), bp::arg("key") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::CEGUI::Workarounds::NamedAreaMapGet
        
            typedef ::CEGUI::NamedArea * ( *NamedAreaMapGet_function_type )( ::std::map<CEGUI::String, CEGUI::NamedArea*, CEGUI::StringFastLessCompare, std::allocator<std::pair<CEGUI::String const, CEGUI::NamedArea*> > > &,::CEGUI::String const & );
            
            Workarounds_exposer.def( 
                "NamedAreaMapGet"
                , NamedAreaMapGet_function_type( &::CEGUI::Workarounds::NamedAreaMapGet )
                , ( bp::arg("map"), bp::arg("key") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::CEGUI::Workarounds::PropertyDefinitionBaseMapGet
        
            typedef ::CEGUI::PropertyDefinitionBase * ( *PropertyDefinitionBaseMapGet_function_type )( ::std::map<CEGUI::String, CEGUI::PropertyDefinitionBase*, CEGUI::StringFastLessCompare, std::allocator<std::pair<CEGUI::String const, CEGUI::PropertyDefinitionBase*> > > &,::CEGUI::String const & );
            
            Workarounds_exposer.def( 
                "PropertyDefinitionBaseMapGet"
                , PropertyDefinitionBaseMapGet_function_type( &::CEGUI::Workarounds::PropertyDefinitionBaseMapGet )
                , ( bp::arg("map"), bp::arg("key") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::CEGUI::Workarounds::PropertyInitialiserMapGet
        
            typedef ::CEGUI::PropertyInitialiser * ( *PropertyInitialiserMapGet_function_type )( ::std::map<CEGUI::String, CEGUI::PropertyInitialiser*, CEGUI::StringFastLessCompare, std::allocator<std::pair<CEGUI::String const, CEGUI::PropertyInitialiser*> > > &,::CEGUI::String const & );
            
            Workarounds_exposer.def( 
                "PropertyInitialiserMapGet"
                , PropertyInitialiserMapGet_function_type( &::CEGUI::Workarounds::PropertyInitialiserMapGet )
                , ( bp::arg("map"), bp::arg("key") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::CEGUI::Workarounds::StateImageryMapGet
        
            typedef ::CEGUI::StateImagery * ( *StateImageryMapGet_function_type )( ::std::map<CEGUI::String, CEGUI::StateImagery*, CEGUI::StringFastLessCompare, std::allocator<std::pair<CEGUI::String const, CEGUI::StateImagery*> > > &,::CEGUI::String const & );
            
            Workarounds_exposer.def( 
                "StateImageryMapGet"
                , StateImageryMapGet_function_type( &::CEGUI::Workarounds::StateImageryMapGet )
                , ( bp::arg("map"), bp::arg("key") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::CEGUI::Workarounds::WidgetComponentMapGet
        
            typedef ::CEGUI::WidgetComponent * ( *WidgetComponentMapGet_function_type )( ::std::map<CEGUI::String, CEGUI::WidgetComponent*, CEGUI::StringFastLessCompare, std::allocator<std::pair<CEGUI::String const, CEGUI::WidgetComponent*> > > &,::CEGUI::String const & );
            
            Workarounds_exposer.def( 
                "WidgetComponentMapGet"
                , WidgetComponentMapGet_function_type( &::CEGUI::Workarounds::WidgetComponentMapGet )
                , ( bp::arg("map"), bp::arg("key") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        { //::CEGUI::Workarounds::WidgetLookFeelMapGet
        
            typedef ::CEGUI::WidgetLookFeel * ( *WidgetLookFeelMapGet_function_type )( ::std::map<CEGUI::String, CEGUI::WidgetLookFeel*, CEGUI::StringFastLessCompare, std::allocator<std::pair<CEGUI::String const, CEGUI::WidgetLookFeel*> > > &,::CEGUI::String const & );
            
            Workarounds_exposer.def( 
                "WidgetLookFeelMapGet"
                , WidgetLookFeelMapGet_function_type( &::CEGUI::Workarounds::WidgetLookFeelMapGet )
                , ( bp::arg("map"), bp::arg("key") )
                , bp::return_value_policy< bp::reference_existing_object >() );
        
        }
        Workarounds_exposer.staticmethod( "EventLinkDefinitionMapGet" );
        Workarounds_exposer.staticmethod( "ImagerySectionMapGet" );
        Workarounds_exposer.staticmethod( "NamedAreaMapGet" );
        Workarounds_exposer.staticmethod( "PropertyDefinitionBaseMapGet" );
        Workarounds_exposer.staticmethod( "PropertyInitialiserMapGet" );
        Workarounds_exposer.staticmethod( "StateImageryMapGet" );
        Workarounds_exposer.staticmethod( "WidgetComponentMapGet" );
        Workarounds_exposer.staticmethod( "WidgetLookFeelMapGet" );
    }

}
