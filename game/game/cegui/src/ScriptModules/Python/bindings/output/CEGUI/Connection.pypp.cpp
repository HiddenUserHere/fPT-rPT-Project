// This file has been generated by Py++.

#include "boost/python.hpp"
#include "generators/include/python_CEGUI.h"
#include "Connection.pypp.hpp"

namespace bp = boost::python;

void register_Connection_class(){

    { //::CEGUI::RefCounted< CEGUI::BoundSlot >
        typedef bp::class_< CEGUI::RefCounted< CEGUI::BoundSlot > > Connection_exposer_t;
        Connection_exposer_t Connection_exposer = Connection_exposer_t( "Connection", bp::init< >("*!\n\
        \n\
            Default constructor.\n\
        *\n") );
        bp::scope Connection_scope( Connection_exposer );
        Connection_exposer.def( bp::init< CEGUI::BoundSlot * >(( bp::arg("ob") ), "*!\n\
        \n\
            Contruct a RefCounted object that wraps the pointer  ob.\n\
        *\n") );
        bp::implicitly_convertible< CEGUI::BoundSlot *, CEGUI::RefCounted< CEGUI::BoundSlot > >();
        Connection_exposer.def( bp::init< CEGUI::RefCounted< CEGUI::BoundSlot > const & >(( bp::arg("other") ), "*!\n\
        \n\
            Copy constructor\n\
        *\n") );
        { //::CEGUI::RefCounted< CEGUI::BoundSlot >::isValid
        
            typedef CEGUI::RefCounted< CEGUI::BoundSlot > exported_class_t;
            typedef bool ( exported_class_t::*isValid_function_type )(  ) const;
            
            Connection_exposer.def( 
                "isValid"
                , isValid_function_type( &::CEGUI::RefCounted< CEGUI::BoundSlot >::isValid )
                , "*!\n\
            \n\
                Return whether the wrapped pointer is valid.  i.e. that it is not null.\n\
            *\n" );
        
        }
        Connection_exposer.def( bp::self != bp::self );
        { //::CEGUI::RefCounted< CEGUI::BoundSlot >::operator=
        
            typedef CEGUI::RefCounted< CEGUI::BoundSlot > exported_class_t;
            typedef ::CEGUI::RefCounted< CEGUI::BoundSlot > & ( exported_class_t::*assign_function_type )( ::CEGUI::RefCounted< CEGUI::BoundSlot > const & ) ;
            
            Connection_exposer.def( 
                "assign"
                , assign_function_type( &::CEGUI::RefCounted< CEGUI::BoundSlot >::operator= )
                , ( bp::arg("other") )
                , bp::return_self< >()
                , "*!\n\
            \n\
                Assignment operator.  Previously held object gets its reference count\n\
                reduced, and is deleted if no further references exist.  The newly\n\
                assigned object, taken from  other, gets its count increased.\n\
            *\n" );
        
        }
        Connection_exposer.def( bp::self == bp::self );
    }

}
